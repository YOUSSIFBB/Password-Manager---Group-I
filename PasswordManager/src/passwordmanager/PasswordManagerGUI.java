/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package passwordmanager;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.security.SecureRandom;
//import java.security.SecureRandom;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import java.util.Random;

/**
 *
 * @author fadit
 */
public class PasswordManagerGUI extends javax.swing.JFrame {

    /**
     * Creates new form PasswordManagerGUI
     */
    Random random = new Random();

    public PasswordManagerGUI() {
        initComponents();
        CreateAccountOptionPanel.setVisible(false);
        LoginOptionPanel.setVisible(false);
        MainPasswordManagerPanel.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        OverviewPanel = new java.awt.Panel();
        introductionTitleLbl = new java.awt.Label();
        introductionTitleLbl2 = new javax.swing.JLabel();
        introductionStartBtn = new javax.swing.JButton();
        mainMenuLogo = new javax.swing.JLabel();
        AccessOptionPanel = new java.awt.Panel();
        AccessOptionTitleLbl = new javax.swing.JLabel();
        OptionalBoxComboBox = new javax.swing.JComboBox<>();
        CreateAccountOptionPanel = new java.awt.Panel();
        FirstNameLbl = new javax.swing.JLabel();
        FirstNameTF = new javax.swing.JTextField();
        LastNameLbl = new javax.swing.JLabel();
        LastNameTF = new javax.swing.JTextField();
        PhoneNumberLbl = new javax.swing.JLabel();
        PhoneNumberTF = new javax.swing.JTextField();
        EmailAddressLbl = new javax.swing.JLabel();
        EmailAddressTf = new javax.swing.JTextField();
        PasswordLbl = new javax.swing.JLabel();
        PasswordTF = new javax.swing.JTextField();
        RePasswordLbl = new javax.swing.JLabel();
        RePasswordTF = new javax.swing.JTextField();
        DateOfBirthLbl = new javax.swing.JLabel();
        DateOfBirthTF = new javax.swing.JTextField();
        SexLbl = new javax.swing.JLabel();
        SexComboBox = new javax.swing.JComboBox<>();
        CreateAccountOptionTitleLbl = new javax.swing.JLabel();
        ClearBtn = new javax.swing.JButton();
        createAccountBtn = new javax.swing.JButton();
        GoBackOptionalPageDisplayy = new javax.swing.JLabel();
        LoginOptionPanel = new java.awt.Panel();
        LoginOptionTitleLbl = new javax.swing.JLabel();
        LoginEmailAddressLbl = new javax.swing.JLabel();
        LoginEmailAddressTf = new javax.swing.JTextField();
        LoginPasswordLbl = new javax.swing.JLabel();
        LoginPasswordTF = new javax.swing.JTextField();
        LoginBtn = new javax.swing.JButton();
        GoBackOptionalPageDisplay = new javax.swing.JLabel();
        MainPasswordManagerPanel = new java.awt.Panel();
        MainTitleLbl1 = new javax.swing.JLabel();
        FirstNameMainLbl1 = new javax.swing.JLabel();
        FirstNameDisplay1 = new javax.swing.JLabel();
        LastNameMainLbl1 = new javax.swing.JLabel();
        LastNameDisplay1 = new javax.swing.JLabel();
        PhoneNumberMainLbl1 = new javax.swing.JLabel();
        PhoneNumberDisplay1 = new javax.swing.JLabel();
        EmailAddressMainLbl1 = new javax.swing.JLabel();
        EmailAddressDisplay1 = new javax.swing.JLabel();
        PasswordMainLbl1 = new javax.swing.JLabel();
        PasswordDisplay1 = new javax.swing.JLabel();
        DateOfBirthMainLbl1 = new javax.swing.JLabel();
        DateOfBirthDisplay1 = new javax.swing.JLabel();
        SexMainLbl1 = new javax.swing.JLabel();
        SexMainDisplay1 = new javax.swing.JLabel();
        GeneratePasswordLbl1 = new javax.swing.JLabel();
        GeneratePasswordDisplay1 = new javax.swing.JLabel();
        EncryptPasswordLbl1 = new javax.swing.JLabel();
        EncryptPasswordDisplay1 = new javax.swing.JLabel();
        GeneratePasswordBtn1 = new javax.swing.JButton();
        DeleteAccountBtn1 = new javax.swing.JButton();
        SignOutBtn1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1130, 567));

        introductionTitleLbl.setFont(new java.awt.Font("Bookman Old Style", 1, 47)); // NOI18N
        introductionTitleLbl.setText("Welcome To Password Manager ");

        introductionTitleLbl2.setFont(new java.awt.Font("Bookman Old Style", 1, 39)); // NOI18N
        introductionTitleLbl2.setText("Please Click Start To Begin");

        introductionStartBtn.setFont(new java.awt.Font("Bookman Old Style", 1, 34)); // NOI18N
        introductionStartBtn.setText("Start");
        introductionStartBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                introductionStartBtnActionPerformed(evt);
            }
        });

        mainMenuLogo.setBackground(new java.awt.Color(255, 255, 255));
        mainMenuLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/passwordmanager/img/passwordManagerLogo.png"))); // NOI18N

        javax.swing.GroupLayout OverviewPanelLayout = new javax.swing.GroupLayout(OverviewPanel);
        OverviewPanel.setLayout(OverviewPanelLayout);
        OverviewPanelLayout.setHorizontalGroup(
            OverviewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(OverviewPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(OverviewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, OverviewPanelLayout.createSequentialGroup()
                        .addGap(0, 139, Short.MAX_VALUE)
                        .addGroup(OverviewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, OverviewPanelLayout.createSequentialGroup()
                                .addComponent(introductionTitleLbl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(202, 202, 202))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, OverviewPanelLayout.createSequentialGroup()
                                .addComponent(introductionTitleLbl2)
                                .addGap(328, 328, 328))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, OverviewPanelLayout.createSequentialGroup()
                                .addComponent(introductionStartBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(442, 442, 442))))
                    .addGroup(OverviewPanelLayout.createSequentialGroup()
                        .addComponent(mainMenuLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        OverviewPanelLayout.setVerticalGroup(
            OverviewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(OverviewPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mainMenuLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46)
                .addComponent(introductionTitleLbl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(introductionTitleLbl2)
                .addGap(18, 18, 18)
                .addComponent(introductionStartBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(143, Short.MAX_VALUE))
        );

        AccessOptionPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        AccessOptionTitleLbl.setFont(new java.awt.Font("Bookman Old Style", 1, 36)); // NOI18N
        AccessOptionTitleLbl.setText("Please Select Sign Up/In Option Below:");
        AccessOptionPanel.add(AccessOptionTitleLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(231, 33, -1, -1));

        OptionalBoxComboBox.setFont(new java.awt.Font("Bookman Old Style", 1, 24)); // NOI18N
        OptionalBoxComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "", "Register", "Login" }));
        OptionalBoxComboBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                OptionalBoxComboBoxMouseExited(evt);
            }
        });
        OptionalBoxComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OptionalBoxComboBoxActionPerformed(evt);
            }
        });
        AccessOptionPanel.add(OptionalBoxComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(365, 94, 370, 60));

        CreateAccountOptionPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        FirstNameLbl.setFont(new java.awt.Font("Bookman Old Style", 1, 18)); // NOI18N
        FirstNameLbl.setText("First Name:");
        CreateAccountOptionPanel.add(FirstNameLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 140, -1, -1));

        FirstNameTF.setFont(new java.awt.Font("Bookman Old Style", 3, 18)); // NOI18N
        FirstNameTF.setText("Fadi");
        CreateAccountOptionPanel.add(FirstNameTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 140, 280, -1));

        LastNameLbl.setFont(new java.awt.Font("Bookman Old Style", 1, 18)); // NOI18N
        LastNameLbl.setText("Last Name:");
        CreateAccountOptionPanel.add(LastNameLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 180, -1, -1));

        LastNameTF.setFont(new java.awt.Font("Bookman Old Style", 3, 18)); // NOI18N
        LastNameTF.setText("Al Tourkman");
        CreateAccountOptionPanel.add(LastNameTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 180, 280, -1));

        PhoneNumberLbl.setFont(new java.awt.Font("Bookman Old Style", 1, 18)); // NOI18N
        PhoneNumberLbl.setText("Phone Number:");
        CreateAccountOptionPanel.add(PhoneNumberLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 230, -1, -1));

        PhoneNumberTF.setFont(new java.awt.Font("Bookman Old Style", 3, 18)); // NOI18N
        PhoneNumberTF.setText("0892563207");
        CreateAccountOptionPanel.add(PhoneNumberTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 230, 280, -1));

        EmailAddressLbl.setFont(new java.awt.Font("Bookman Old Style", 1, 18)); // NOI18N
        EmailAddressLbl.setText("Email Address:");
        CreateAccountOptionPanel.add(EmailAddressLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 280, -1, -1));

        EmailAddressTf.setFont(new java.awt.Font("Bookman Old Style", 3, 18)); // NOI18N
        EmailAddressTf.setText("faditourkman2@gmail.com");
        CreateAccountOptionPanel.add(EmailAddressTf, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 270, 280, -1));

        PasswordLbl.setFont(new java.awt.Font("Bookman Old Style", 1, 18)); // NOI18N
        PasswordLbl.setText("Password:");
        CreateAccountOptionPanel.add(PasswordLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 140, -1, -1));

        PasswordTF.setFont(new java.awt.Font("Bookman Old Style", 3, 18)); // NOI18N
        PasswordTF.setText("1234Fadi@/");
        CreateAccountOptionPanel.add(PasswordTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 140, 270, -1));

        RePasswordLbl.setFont(new java.awt.Font("Bookman Old Style", 1, 18)); // NOI18N
        RePasswordLbl.setText("Re-Password:");
        CreateAccountOptionPanel.add(RePasswordLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 180, -1, -1));

        RePasswordTF.setFont(new java.awt.Font("Bookman Old Style", 3, 18)); // NOI18N
        RePasswordTF.setText("1234Fadi@/");
        CreateAccountOptionPanel.add(RePasswordTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 180, 270, -1));

        DateOfBirthLbl.setFont(new java.awt.Font("Bookman Old Style", 1, 18)); // NOI18N
        DateOfBirthLbl.setText("Date-Of-Birth:");
        CreateAccountOptionPanel.add(DateOfBirthLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 230, -1, -1));

        DateOfBirthTF.setFont(new java.awt.Font("Bookman Old Style", 3, 18)); // NOI18N
        DateOfBirthTF.setText("17 July 2002");
        CreateAccountOptionPanel.add(DateOfBirthTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 230, 270, -1));

        SexLbl.setFont(new java.awt.Font("Bookman Old Style", 1, 18)); // NOI18N
        SexLbl.setText("Sex:");
        CreateAccountOptionPanel.add(SexLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 280, -1, -1));

        SexComboBox.setFont(new java.awt.Font("Bookman Old Style", 3, 18)); // NOI18N
        SexComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "", "Male", "Female", "Bisexual", "Others" }));
        SexComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SexComboBoxActionPerformed(evt);
            }
        });
        CreateAccountOptionPanel.add(SexComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 270, 270, -1));

        CreateAccountOptionTitleLbl.setFont(new java.awt.Font("Bookman Old Style", 1, 40)); // NOI18N
        CreateAccountOptionTitleLbl.setText("Create Account Option Page:");
        CreateAccountOptionPanel.add(CreateAccountOptionTitleLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 50, -1, -1));

        ClearBtn.setFont(new java.awt.Font("Bookman Old Style", 1, 36)); // NOI18N
        ClearBtn.setText("Clear");
        ClearBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ClearBtnMouseClicked(evt);
            }
        });
        ClearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearBtnActionPerformed(evt);
            }
        });
        CreateAccountOptionPanel.add(ClearBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 350, 320, -1));

        createAccountBtn.setFont(new java.awt.Font("Bookman Old Style", 1, 36)); // NOI18N
        createAccountBtn.setText("Create Account");
        createAccountBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createAccountBtnActionPerformed(evt);
            }
        });
        CreateAccountOptionPanel.add(createAccountBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 350, -1, -1));

        GoBackOptionalPageDisplayy.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        GoBackOptionalPageDisplayy.setIcon(new javax.swing.ImageIcon(getClass().getResource("/passwordmanager/img/leftArrow.png"))); // NOI18N
        GoBackOptionalPageDisplayy.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                GoBackOptionalPageDisplayyMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                GoBackOptionalPageDisplayyMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                GoBackOptionalPageDisplayyMouseExited(evt);
            }
        });
        CreateAccountOptionPanel.add(GoBackOptionalPageDisplayy, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 130, 130));

        AccessOptionPanel.add(CreateAccountOptionPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -3, 1130, 570));

        LoginOptionTitleLbl.setFont(new java.awt.Font("Bookman Old Style", 1, 42)); // NOI18N
        LoginOptionTitleLbl.setText("Login Option Page:");

        LoginEmailAddressLbl.setFont(new java.awt.Font("Bookman Old Style", 1, 22)); // NOI18N
        LoginEmailAddressLbl.setText("Email Address:");

        LoginEmailAddressTf.setFont(new java.awt.Font("Bookman Old Style", 3, 22)); // NOI18N
        LoginEmailAddressTf.setText("faditourkman2@gmail.com");

        LoginPasswordLbl.setFont(new java.awt.Font("Bookman Old Style", 1, 22)); // NOI18N
        LoginPasswordLbl.setText("Password:");

        LoginPasswordTF.setFont(new java.awt.Font("Bookman Old Style", 3, 22)); // NOI18N
        LoginPasswordTF.setText("1234Fadi@/");
        LoginPasswordTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoginPasswordTFActionPerformed(evt);
            }
        });

        LoginBtn.setFont(new java.awt.Font("Bookman Old Style", 1, 36)); // NOI18N
        LoginBtn.setText("Login");
        LoginBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoginBtnActionPerformed(evt);
            }
        });

        GoBackOptionalPageDisplay.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        GoBackOptionalPageDisplay.setIcon(new javax.swing.ImageIcon(getClass().getResource("/passwordmanager/img/leftArrow.png"))); // NOI18N
        GoBackOptionalPageDisplay.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                GoBackOptionalPageDisplayMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                GoBackOptionalPageDisplayMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                GoBackOptionalPageDisplayMouseExited(evt);
            }
        });

        javax.swing.GroupLayout LoginOptionPanelLayout = new javax.swing.GroupLayout(LoginOptionPanel);
        LoginOptionPanel.setLayout(LoginOptionPanelLayout);
        LoginOptionPanelLayout.setHorizontalGroup(
            LoginOptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LoginOptionPanelLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(GoBackOptionalPageDisplay)
                .addGroup(LoginOptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(LoginOptionPanelLayout.createSequentialGroup()
                        .addGap(204, 204, 204)
                        .addGroup(LoginOptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(LoginOptionPanelLayout.createSequentialGroup()
                                .addGap(42, 42, 42)
                                .addComponent(LoginBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(399, 399, 399))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, LoginOptionPanelLayout.createSequentialGroup()
                                .addComponent(LoginPasswordLbl)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(LoginPasswordTF, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(344, 344, 344))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, LoginOptionPanelLayout.createSequentialGroup()
                                .addComponent(LoginEmailAddressLbl)
                                .addGap(22, 22, 22)
                                .addComponent(LoginEmailAddressTf, javax.swing.GroupLayout.PREFERRED_SIZE, 347, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(233, 233, 233))))
                    .addGroup(LoginOptionPanelLayout.createSequentialGroup()
                        .addGap(232, 232, 232)
                        .addComponent(LoginOptionTitleLbl)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        LoginOptionPanelLayout.setVerticalGroup(
            LoginOptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LoginOptionPanelLayout.createSequentialGroup()
                .addGroup(LoginOptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(LoginOptionPanelLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(GoBackOptionalPageDisplay)
                        .addGap(10, 10, 10))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, LoginOptionPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(LoginOptionTitleLbl)
                        .addGap(46, 46, 46)))
                .addGroup(LoginOptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LoginEmailAddressLbl)
                    .addComponent(LoginEmailAddressTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(LoginOptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(LoginPasswordTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LoginPasswordLbl))
                .addGap(54, 54, 54)
                .addComponent(LoginBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(175, Short.MAX_VALUE))
        );

        AccessOptionPanel.add(LoginOptionPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -3, -1, 560));

        MainPasswordManagerPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        MainTitleLbl1.setFont(new java.awt.Font("Bookman Old Style", 1, 36)); // NOI18N
        MainTitleLbl1.setText("Welcome To Password Manager");
        MainPasswordManagerPanel.add(MainTitleLbl1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 30, -1, -1));

        FirstNameMainLbl1.setFont(new java.awt.Font("Bookman Old Style", 1, 18)); // NOI18N
        FirstNameMainLbl1.setText("First-Name:");
        MainPasswordManagerPanel.add(FirstNameMainLbl1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 120, -1, -1));

        FirstNameDisplay1.setFont(new java.awt.Font("Bookman Old Style", 3, 16)); // NOI18N
        FirstNameDisplay1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        FirstNameDisplay1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        MainPasswordManagerPanel.add(FirstNameDisplay1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 110, 280, 34));

        LastNameMainLbl1.setFont(new java.awt.Font("Bookman Old Style", 1, 18)); // NOI18N
        LastNameMainLbl1.setText("Last-Name:");
        MainPasswordManagerPanel.add(LastNameMainLbl1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 160, -1, -1));

        LastNameDisplay1.setFont(new java.awt.Font("Bookman Old Style", 3, 16)); // NOI18N
        LastNameDisplay1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LastNameDisplay1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        MainPasswordManagerPanel.add(LastNameDisplay1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 150, 280, 34));

        PhoneNumberMainLbl1.setFont(new java.awt.Font("Bookman Old Style", 1, 18)); // NOI18N
        PhoneNumberMainLbl1.setText("Phone-Number:");
        MainPasswordManagerPanel.add(PhoneNumberMainLbl1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 200, -1, -1));

        PhoneNumberDisplay1.setFont(new java.awt.Font("Bookman Old Style", 3, 16)); // NOI18N
        PhoneNumberDisplay1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        PhoneNumberDisplay1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        MainPasswordManagerPanel.add(PhoneNumberDisplay1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 190, 280, 34));

        EmailAddressMainLbl1.setFont(new java.awt.Font("Bookman Old Style", 1, 18)); // NOI18N
        EmailAddressMainLbl1.setText("Email-Address:");
        MainPasswordManagerPanel.add(EmailAddressMainLbl1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 240, -1, -1));

        EmailAddressDisplay1.setFont(new java.awt.Font("Bookman Old Style", 3, 16)); // NOI18N
        EmailAddressDisplay1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        EmailAddressDisplay1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        MainPasswordManagerPanel.add(EmailAddressDisplay1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 230, 280, 34));

        PasswordMainLbl1.setFont(new java.awt.Font("Bookman Old Style", 1, 18)); // NOI18N
        PasswordMainLbl1.setText("Password:");
        MainPasswordManagerPanel.add(PasswordMainLbl1, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 120, -1, -1));

        PasswordDisplay1.setFont(new java.awt.Font("Bookman Old Style", 3, 16)); // NOI18N
        PasswordDisplay1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        PasswordDisplay1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        MainPasswordManagerPanel.add(PasswordDisplay1, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 110, 280, 34));

        DateOfBirthMainLbl1.setFont(new java.awt.Font("Bookman Old Style", 1, 18)); // NOI18N
        DateOfBirthMainLbl1.setText("Date-Of-Birth:");
        MainPasswordManagerPanel.add(DateOfBirthMainLbl1, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 160, -1, -1));

        DateOfBirthDisplay1.setFont(new java.awt.Font("Bookman Old Style", 3, 16)); // NOI18N
        DateOfBirthDisplay1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        DateOfBirthDisplay1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        MainPasswordManagerPanel.add(DateOfBirthDisplay1, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 150, 280, 34));

        SexMainLbl1.setFont(new java.awt.Font("Bookman Old Style", 1, 18)); // NOI18N
        SexMainLbl1.setText("Sex:");
        MainPasswordManagerPanel.add(SexMainLbl1, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 200, -1, -1));

        SexMainDisplay1.setFont(new java.awt.Font("Bookman Old Style", 3, 16)); // NOI18N
        SexMainDisplay1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        SexMainDisplay1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        MainPasswordManagerPanel.add(SexMainDisplay1, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 190, 280, 34));

        GeneratePasswordLbl1.setFont(new java.awt.Font("Bookman Old Style", 1, 18)); // NOI18N
        GeneratePasswordLbl1.setText("Generate-Password:");
        MainPasswordManagerPanel.add(GeneratePasswordLbl1, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 240, -1, -1));

        GeneratePasswordDisplay1.setFont(new java.awt.Font("Bookman Old Style", 3, 16)); // NOI18N
        GeneratePasswordDisplay1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        GeneratePasswordDisplay1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        MainPasswordManagerPanel.add(GeneratePasswordDisplay1, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 230, 280, 34));

        EncryptPasswordLbl1.setFont(new java.awt.Font("Bookman Old Style", 1, 18)); // NOI18N
        EncryptPasswordLbl1.setText("Encrypt-Password:");
        MainPasswordManagerPanel.add(EncryptPasswordLbl1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 300, 240, 40));

        EncryptPasswordDisplay1.setFont(new java.awt.Font("Bookman Old Style", 3, 16)); // NOI18N
        EncryptPasswordDisplay1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        EncryptPasswordDisplay1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        MainPasswordManagerPanel.add(EncryptPasswordDisplay1, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 300, 600, 34));

        GeneratePasswordBtn1.setFont(new java.awt.Font("Bookman Old Style", 1, 36)); // NOI18N
        GeneratePasswordBtn1.setText("Generate-Random-Password");
        GeneratePasswordBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GeneratePasswordBtn1ActionPerformed(evt);
            }
        });
        MainPasswordManagerPanel.add(GeneratePasswordBtn1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 360, -1, -1));

        DeleteAccountBtn1.setFont(new java.awt.Font("Bookman Old Style", 1, 36)); // NOI18N
        DeleteAccountBtn1.setText("Delete-Account");
        DeleteAccountBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteAccountBtn1ActionPerformed(evt);
            }
        });
        MainPasswordManagerPanel.add(DeleteAccountBtn1, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 360, 380, -1));

        SignOutBtn1.setFont(new java.awt.Font("Bookman Old Style", 1, 36)); // NOI18N
        SignOutBtn1.setText("Sign-Out");
        SignOutBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SignOutBtn1ActionPerformed(evt);
            }
        });
        MainPasswordManagerPanel.add(SignOutBtn1, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 430, 380, 60));

        AccessOptionPanel.add(MainPasswordManagerPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1130, 610));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(OverviewPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(AccessOptionPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(OverviewPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 98, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(AccessOptionPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void introductionStartBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_introductionStartBtnActionPerformed
        // setting visibilities of this button
        OverviewPanel.setVisible(false);
        AccessOptionPanel.setVisible(true);
        MainPasswordManagerPanel.setVisible(false);
    }//GEN-LAST:event_introductionStartBtnActionPerformed

    private void OptionalBoxComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OptionalBoxComboBoxActionPerformed
        //UI setting the visibility of the panels
        // Setting visibility of panels based on the 'Register' option selection
        if (OptionalBoxComboBox.getSelectedItem().toString().matches("Register")) {
            AccessOptionPanel.setVisible(true);
            CreateAccountOptionPanel.setVisible(true);
            LoginOptionPanel.setVisible(false);
            OverviewPanel.setVisible(false);
            MainPasswordManagerPanel.setVisible(false);
            OptionalBoxComboBox.setVisible(false);
            AccessOptionTitleLbl.setVisible(false);

            // Setting visibility of panels based on the 'Login' option selection
        } else if (OptionalBoxComboBox.getSelectedItem().toString().matches("Login")) {
            AccessOptionPanel.setVisible(true);
            CreateAccountOptionPanel.setVisible(false);
            LoginOptionPanel.setVisible(true);
            OverviewPanel.setVisible(false);
            MainPasswordManagerPanel.setVisible(false);
            OptionalBoxComboBox.setVisible(false);
            AccessOptionTitleLbl.setVisible(false);

        } else {
            // Handling invalid selection from combo box
            AccessOptionPanel.setVisible(true);
            CreateAccountOptionPanel.setVisible(false);
            LoginOptionPanel.setVisible(false);
            OverviewPanel.setVisible(false);
            MainPasswordManagerPanel.setVisible(false);
            JOptionPane.showMessageDialog(null, "Please select either 'Register' or 'Login'");
        }
    }//GEN-LAST:event_OptionalBoxComboBoxActionPerformed

    private void createAccountBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createAccountBtnActionPerformed

        String selectedSex = (String) SexComboBox.getSelectedItem();
        // Validate First Name
        if (PasswordManager.validateName(FirstNameTF.getText()) == false) {
            JOptionPane.showMessageDialog(null, "Invalid First-Name, Please Enter Letters only");
            return;
            // Validate Last Name
        } else if (PasswordManager.validateName(LastNameTF.getText()) == false) {
            JOptionPane.showMessageDialog(null, "Invalid Last-Name, Please Enter Letters only");
            return;
            // Validate Phone Number
        } else if (!PasswordManager.validatePhoneNumber(PhoneNumberTF.getText())) {
            JOptionPane.showMessageDialog(null, "Invalid number. Enter a valid Irish mobile, starting with '+353' or '0' and "
                    + "the prefix '83', '85', '86', '87', or '89'. "
                    + "No spaces/dashes.");
            return;
            // Validate Email Address
        } else if (!PasswordManager.validateEmailAddress(EmailAddressTf.getText())) {
            JOptionPane.showMessageDialog(null, "Invalid Email-Address");
            return;
            // Validate Password
        } else if (!PasswordManager.validatePassword(PasswordTF.getText())) {
            JOptionPane.showMessageDialog(null, "Invalid Password, please make sure your password is around 8 characters with special charaters,uppercase/lower case letters and numbers are included ");
            return;
            // Validate Re-Password
        } else if (!PasswordTF.getText().equals(RePasswordTF.getText())) {
            JOptionPane.showMessageDialog(null, "Invalid Re-Password, Please make sure password and re-password are the same");
            return;
            // Validate Date of Birth
        } else if (!PasswordManager.validateDateOfBirth(DateOfBirthTF.getText())) {
            JOptionPane.showMessageDialog(null, "Invalid Re-Password, Example patterns: \"12 January 1990\" or \"January 12, 1990");
            return;
            // Validate Sex Selection
        } else if (!PasswordManager.validateSexSelection(selectedSex)) {
            JOptionPane.showMessageDialog(null, "Invalid Sex, Please select a valid option");
            return;
        }

        // ******Password hashing section here******
        String enteredPassword = PasswordTF.getText();  //save user input for password
        String salt = PasswordEncryption.generateSlat();        //generate the salt my calling the generateSalt() method from the PasswordEncryption class
        String hashedPassword = PasswordEncryption.passwordHash(enteredPassword, salt); //hash the users password by calling the passwordHash () method
        // Display the hashed password
        JOptionPane.showMessageDialog(null, "Encrypted Password : " + hashedPassword);
        // File Writing Section
        // Declaring file and writers for writing user information
        File outFile;
        FileWriter fw;
        BufferedWriter bw;

        //Trim and store user input
        String firstName = FirstNameTF.getText().trim();
        String lastName = LastNameTF.getText().trim();
        String name = firstName + lastName;
        String emailAddress = EmailAddressTf.getText().trim();
        String phoneNumber = PhoneNumberTF.getText().trim();
        String password = PasswordTF.getText().trim();
        String dateOfBirth = DateOfBirthTF.getText().trim();
        String sex = SexComboBox.getSelectedItem().toString();

        boolean emailExists = false;

        try {
            // Read the file to check if the email already exists
            BufferedReader br = new BufferedReader(new FileReader("UserInformation.txt"));
            String line;
            while ((line = br.readLine()) != null) {
                if (line.contains(emailAddress)) {
                    emailExists = true;
                    break;
                }
            }
            br.close();

            if (emailExists) {
                // Inform the user that the email already exists
                JOptionPane.showMessageDialog(null, "Email already exists. Please enter a different email");
                return; // Exit the method without saving
            }
        } catch (IOException e) {
            e.printStackTrace();
        }

        try {
            // Write user information to file
            outFile = new File("UserInformation.txt");
            fw = new FileWriter(outFile, true);
            bw = new BufferedWriter(fw);

            // Writing formatted user data to the file
            bw.write(firstName + ", " + lastName + ", " + emailAddress + ", " + phoneNumber + ", " + password + ", " + dateOfBirth + ", " + sex + ", " + hashedPassword + ", " + salt);
            bw.newLine();

            // Closing the BufferedWriter
            bw.close();

            // Inform user of successful addition
            JOptionPane.showMessageDialog(null, "Successfully Added");

        } catch (IOException e) {
            e.printStackTrace();
        }

        // UI Update Section
        // Updating UI elements based on the user registration process
        AccessOptionPanel.setVisible(true);
        MainPasswordManagerPanel.setVisible(true);
        AccessOptionTitleLbl.setVisible(false);
        OptionalBoxComboBox.setVisible(false);
        LoginOptionPanel.setVisible(false);
        CreateAccountOptionPanel.setVisible(false);

        // Displaying user information on UI
        FirstNameDisplay1.setText(firstName);
        LastNameDisplay1.setText(lastName);
        PhoneNumberDisplay1.setText(phoneNumber);
        EmailAddressDisplay1.setText(emailAddress);
        PasswordDisplay1.setText(password);
        DateOfBirthDisplay1.setText(dateOfBirth);
        SexMainDisplay1.setText(sex);
        EncryptPasswordDisplay1.setText(hashedPassword);
    }//GEN-LAST:event_createAccountBtnActionPerformed

    private void LoginBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoginBtnActionPerformed
        // Validate Login Email Address
        if (!PasswordManager.validateEmailAddress(LoginEmailAddressTf.getText())) {
            JOptionPane.showMessageDialog(null, "Invalid Login Email-Address");
            return;
            // Validate Login Password
        } else if (!PasswordManager.validatePassword(LoginPasswordTF.getText())) {
            JOptionPane.showMessageDialog(null, "Invalid Password, Please Enter the correct password");
            return;
        }
        // Trimming the user input for email and password
        String loginEmailAddress = LoginEmailAddressTf.getText().trim();
        String loginPassword = LoginPasswordTF.getText().trim();
        boolean credentialsFound = false;

        try {
            // reading the file to check if the email and password exist
            BufferedReader br = new BufferedReader(new FileReader("UserInformation.txt"));
            String line;
            while ((line = br.readLine()) != null) {
                // Format: firstName, lastName, emailAddress, phoneNumber, password, dateOfBirth, sex, hashing, salting 
                String[] userDetails = line.split(", ");
                if (userDetails.length >= 9) {
                    String email = userDetails[2];
                    String storedSalt = userDetails[8]; //specefied index for the sored salt value 
                    String storedHash = userDetails[7]; //specefied index for the sored hash password

                    //change this code to compare hash and salt values of user input instead of the actual passowrd
                    if (email.equals(loginEmailAddress) && PasswordEncryption.passwordHash(loginPassword, storedSalt).equals(storedHash)) {
                        credentialsFound = true;

                        // Displaying user information on the main panel once logged in
                        FirstNameDisplay1.setText(userDetails[0]);
                        LastNameDisplay1.setText(userDetails[1]);
                        PhoneNumberDisplay1.setText(userDetails[3]);
                        EmailAddressDisplay1.setText(userDetails[2]);
                        PasswordDisplay1.setText(userDetails[4]);
                        DateOfBirthDisplay1.setText(userDetails[5]);
                        SexMainDisplay1.setText(userDetails[6]);
                        EncryptPasswordDisplay1.setText(userDetails[7]);

                        break;
                    }
                }
            }
            br.close();
            // this does the handling for the login "success or failure"
            if (credentialsFound) {
                JOptionPane.showMessageDialog(null, "Login Successful");
            } else {
                JOptionPane.showMessageDialog(null, "Email or Password incorrect. Please try again.");
                return;
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
        // UI Update Section
        // Updating the UI elements based on the login process
        AccessOptionPanel.setVisible(true);
        MainPasswordManagerPanel.setVisible(true);
        AccessOptionTitleLbl.setVisible(false);
        OptionalBoxComboBox.setVisible(false);
        LoginOptionPanel.setVisible(false);
        CreateAccountOptionPanel.setVisible(false);
    }//GEN-LAST:event_LoginBtnActionPerformed

    private void ClearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ClearBtnActionPerformed

    private void ClearBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ClearBtnMouseClicked
        //clear the sample example on the text-field 
        FirstNameTF.setText(" ");
        LastNameTF.setText(" ");
        PhoneNumberTF.setText(" ");
        EmailAddressTf.setText(" ");
        PasswordTF.setText(" ");
        RePasswordTF.setText(" ");
        DateOfBirthTF.setText(" ");
    }//GEN-LAST:event_ClearBtnMouseClicked

    private void SexComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SexComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SexComboBoxActionPerformed

    private void OptionalBoxComboBoxMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_OptionalBoxComboBoxMouseExited
        // TODO add your handling code here:

    }//GEN-LAST:event_OptionalBoxComboBoxMouseExited

    private void GeneratePasswordBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GeneratePasswordBtn1ActionPerformed
        String password = generateRandomPassword();
        GeneratePasswordDisplay1.setText(password); //Display data for generated password
    }

    private String generateRandomPassword() {
        String upperCase = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
        String lowerCase = "abcdefghijklmnopqrstuvwxyz";
        String number = "0123456789";
        String specialSymbols = "#?!@$%^&*-";
        SecureRandom random = new SecureRandom();
        StringBuilder password = new StringBuilder();

        // this part makes sure at least one of the character of each type is included within the password 
        password.append(upperCase.charAt(random.nextInt(upperCase.length())));
        password.append(lowerCase.charAt(random.nextInt(lowerCase.length())));
        password.append(number.charAt(random.nextInt(number.length())));
        password.append(specialSymbols.charAt(random.nextInt(specialSymbols.length())));

        //this part would combine all the chars together 
        String generatedPassword = upperCase + lowerCase + number + specialSymbols;

        // Fill up the rest of the length of the password
        for (int i = 4; i < 6 + random.nextInt(5); i++) { //length would be between 6-10 around 
            password.append(generatedPassword.charAt(random.nextInt(generatedPassword.length())));
        }

        return password.toString();

    }//GEN-LAST:event_GeneratePasswordBtn1ActionPerformed

    private void DeleteAccountBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteAccountBtn1ActionPerformed
        //yes/no option for the user to make sure no errors occurs
        int response = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete your account?", "Confirm", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (response == JOptionPane.YES_OPTION) {
            String loginEmailAddress = EmailAddressDisplay1.getText().trim(); // Takes the email-address from the label filed in the main page 
            List<String> lines = new ArrayList<>();
            boolean accountFound = false;

            try {
                // Read the file and store all lines except the one with the user's account
                BufferedReader br = new BufferedReader(new FileReader("UserInformation.txt"));
                String line;
                while ((line = br.readLine()) != null) {
                    if (!line.contains(loginEmailAddress)) {
                        lines.add(line);
                    } else {
                        accountFound = true;
                    }
                }
                br.close();

                // "Write the updated" content back to the file
                if (accountFound) {
                    BufferedWriter bw = new BufferedWriter(new FileWriter("UserInformation.txt"));
                    for (String l : lines) {
                        bw.write(l);
                        bw.newLine();
                    }
                    bw.close();
                    JOptionPane.showMessageDialog(null, "Your Account is successfully deleted."); //successfully deleted
                }
            } catch (IOException ex) {
                ex.printStackTrace();
            }
        }
        //clear the displayed data 
        FirstNameDisplay1.setText("");
        LastNameDisplay1.setText("");
        PhoneNumberDisplay1.setText("");
        EmailAddressDisplay1.setText("");
        PasswordDisplay1.setText("");
        DateOfBirthDisplay1.setText("");
        SexMainDisplay1.setText("");
        GeneratePasswordDisplay1.setText("");
        EncryptPasswordDisplay1.setText("");

        // UI Update Section
        // Updating the UI elements based on the delete process
        CreateAccountOptionPanel.setVisible(false);
        MainPasswordManagerPanel.setVisible(false);
        AccessOptionPanel.setVisible(true);
        OptionalBoxComboBox.setVisible(true);
        AccessOptionTitleLbl.setVisible(true);
        AccessOptionTitleLbl.setVisible(false);
        OptionalBoxComboBox.setVisible(false);
        LoginOptionPanel.setVisible(false);
        OptionalBoxComboBox.setVisible(true);
        AccessOptionTitleLbl.setVisible(true);
        OptionalBoxComboBox.setSelectedItem("");


    }//GEN-LAST:event_DeleteAccountBtn1ActionPerformed

    private void SignOutBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SignOutBtn1ActionPerformed
        //clear the data displayed on the main page
        FirstNameDisplay1.setText("");
        LastNameDisplay1.setText("");
        PhoneNumberDisplay1.setText("");
        EmailAddressDisplay1.setText("");
        PasswordDisplay1.setText("");
        DateOfBirthDisplay1.setText("");
        SexMainDisplay1.setText("");
        GeneratePasswordDisplay1.setText("");
        EncryptPasswordDisplay1.setText("");

        // UI Update Section
        // Updating the UI elements based on the sign-out process
        CreateAccountOptionPanel.setVisible(false);
        MainPasswordManagerPanel.setVisible(false);
        AccessOptionPanel.setVisible(true);
        OptionalBoxComboBox.setVisible(true);
        AccessOptionTitleLbl.setVisible(true);
        AccessOptionTitleLbl.setVisible(false);
        OptionalBoxComboBox.setVisible(false);
        LoginOptionPanel.setVisible(false);
        OptionalBoxComboBox.setVisible(true);
        AccessOptionTitleLbl.setVisible(true);
        OptionalBoxComboBox.setSelectedItem("");
    }//GEN-LAST:event_SignOutBtn1ActionPerformed

    private void GoBackOptionalPageDisplayyMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GoBackOptionalPageDisplayyMouseClicked
        //This methd brings the user back to the Medical History page when the go back button is pressed on the Surgery Appointment Add/edit panel.
        CreateAccountOptionPanel.setVisible(false);
        AccessOptionPanel.setVisible(true);
        OptionalBoxComboBox.setVisible(true);
        AccessOptionTitleLbl.setVisible(true);
        MainPasswordManagerPanel.setVisible(false);
        AccessOptionTitleLbl.setVisible(false);
        OptionalBoxComboBox.setVisible(false);
        LoginOptionPanel.setVisible(false);
        OptionalBoxComboBox.setVisible(true);
        AccessOptionTitleLbl.setVisible(true);
        OptionalBoxComboBox.setSelectedItem("");
    }//GEN-LAST:event_GoBackOptionalPageDisplayyMouseClicked

    private void GoBackOptionalPageDisplayyMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GoBackOptionalPageDisplayyMouseEntered
    }//GEN-LAST:event_GoBackOptionalPageDisplayyMouseEntered

    private void GoBackOptionalPageDisplayyMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GoBackOptionalPageDisplayyMouseExited
    }//GEN-LAST:event_GoBackOptionalPageDisplayyMouseExited

    private void GoBackOptionalPageDisplayMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GoBackOptionalPageDisplayMouseClicked
        // TODO add your handling code here:
        // UI Update Section
        // Updating the UI elements based on going back to optional register/sign-in process
        CreateAccountOptionPanel.setVisible(false);
        AccessOptionPanel.setVisible(true);
        OptionalBoxComboBox.setVisible(true);
        AccessOptionTitleLbl.setVisible(true);
        MainPasswordManagerPanel.setVisible(false);
        AccessOptionTitleLbl.setVisible(false);
        OptionalBoxComboBox.setVisible(false);
        LoginOptionPanel.setVisible(false);
        OptionalBoxComboBox.setVisible(true);
        AccessOptionTitleLbl.setVisible(true);
        OptionalBoxComboBox.setSelectedItem("");
    }//GEN-LAST:event_GoBackOptionalPageDisplayMouseClicked

    private void GoBackOptionalPageDisplayMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GoBackOptionalPageDisplayMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_GoBackOptionalPageDisplayMouseEntered

    private void GoBackOptionalPageDisplayMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GoBackOptionalPageDisplayMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_GoBackOptionalPageDisplayMouseExited

    private void LoginPasswordTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoginPasswordTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LoginPasswordTFActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PasswordManagerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PasswordManagerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PasswordManagerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PasswordManagerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PasswordManagerGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Panel AccessOptionPanel;
    private javax.swing.JLabel AccessOptionTitleLbl;
    private javax.swing.JButton ClearBtn;
    private java.awt.Panel CreateAccountOptionPanel;
    private javax.swing.JLabel CreateAccountOptionTitleLbl;
    private javax.swing.JLabel DateOfBirthDisplay1;
    private javax.swing.JLabel DateOfBirthLbl;
    private javax.swing.JLabel DateOfBirthMainLbl1;
    private javax.swing.JTextField DateOfBirthTF;
    private javax.swing.JButton DeleteAccountBtn1;
    private javax.swing.JLabel EmailAddressDisplay1;
    private javax.swing.JLabel EmailAddressLbl;
    private javax.swing.JLabel EmailAddressMainLbl1;
    private javax.swing.JTextField EmailAddressTf;
    private javax.swing.JLabel EncryptPasswordDisplay1;
    private javax.swing.JLabel EncryptPasswordLbl1;
    private javax.swing.JLabel FirstNameDisplay1;
    private javax.swing.JLabel FirstNameLbl;
    private javax.swing.JLabel FirstNameMainLbl1;
    private javax.swing.JTextField FirstNameTF;
    private javax.swing.JButton GeneratePasswordBtn1;
    private javax.swing.JLabel GeneratePasswordDisplay1;
    private javax.swing.JLabel GeneratePasswordLbl1;
    private javax.swing.JLabel GoBackOptionalPageDisplay;
    private javax.swing.JLabel GoBackOptionalPageDisplayy;
    private javax.swing.JLabel LastNameDisplay1;
    private javax.swing.JLabel LastNameLbl;
    private javax.swing.JLabel LastNameMainLbl1;
    private javax.swing.JTextField LastNameTF;
    private javax.swing.JButton LoginBtn;
    private javax.swing.JLabel LoginEmailAddressLbl;
    private javax.swing.JTextField LoginEmailAddressTf;
    private java.awt.Panel LoginOptionPanel;
    private javax.swing.JLabel LoginOptionTitleLbl;
    private javax.swing.JLabel LoginPasswordLbl;
    private javax.swing.JTextField LoginPasswordTF;
    private java.awt.Panel MainPasswordManagerPanel;
    private javax.swing.JLabel MainTitleLbl1;
    private javax.swing.JComboBox<String> OptionalBoxComboBox;
    private java.awt.Panel OverviewPanel;
    private javax.swing.JLabel PasswordDisplay1;
    private javax.swing.JLabel PasswordLbl;
    private javax.swing.JLabel PasswordMainLbl1;
    private javax.swing.JTextField PasswordTF;
    private javax.swing.JLabel PhoneNumberDisplay1;
    private javax.swing.JLabel PhoneNumberLbl;
    private javax.swing.JLabel PhoneNumberMainLbl1;
    private javax.swing.JTextField PhoneNumberTF;
    private javax.swing.JLabel RePasswordLbl;
    private javax.swing.JTextField RePasswordTF;
    private javax.swing.JComboBox<String> SexComboBox;
    private javax.swing.JLabel SexLbl;
    private javax.swing.JLabel SexMainDisplay1;
    private javax.swing.JLabel SexMainLbl1;
    private javax.swing.JButton SignOutBtn1;
    private javax.swing.JButton createAccountBtn;
    private javax.swing.JButton introductionStartBtn;
    private java.awt.Label introductionTitleLbl;
    private javax.swing.JLabel introductionTitleLbl2;
    private javax.swing.JLabel mainMenuLogo;
    // End of variables declaration//GEN-END:variables
}
